# 地址爬虫应用环境配置模板
# 请复制此文件为 .env 并根据实际情况修改配置值

# ==========================================
# Flask 应用配置
# ==========================================

# 应用密钥 - 在生产环境中必须修改为强随机密钥
SECRET_KEY=your-secret-key-here

# 调试模式 (True/False)
# 开发环境建议设为 True，生产环境必须设为 False
DEBUG=False

# Flask 环境配置
FLASK_ENV=development

# ==========================================
# 数据库配置
# ==========================================

# 数据库连接URL
# SQLite 示例: sqlite:///address_crawler.db
# PostgreSQL 示例: postgresql://user:password@localhost:5432/address_crawler
# MySQL 示例: mysql://user:password@localhost:3306/address_crawler
DATABASE_URL=sqlite:///address_crawler.db

# SQLAlchemy 配置
# 是否显示SQL语句 (True/False)
SQLALCHEMY_ECHO=False

# ==========================================
# APScheduler 调度器配置
# ==========================================

# 调度器时区
SCHEDULER_TIMEZONE=Asia/Shanghai

# 任务默认配置
# 是否合并错过的任务 (True/False)
SCHEDULER_COALESCE=True

# 同一任务最大并发实例数
SCHEDULER_MAX_INSTANCES=3

# 任务错过执行时间后的宽限时间（秒）
SCHEDULER_MISFIRE_GRACE_TIME=300

# 是否启用调度器API (True/False)
SCHEDULER_API_ENABLED=True

# ==========================================
# 日志配置
# ==========================================

# 日志级别 (DEBUG, INFO, WARNING, ERROR, CRITICAL)
LOG_LEVEL=INFO

# 日志格式
LOG_FORMAT=%(asctime)s - %(name)s - %(levelname)s - %(message)s

# 是否启用文件日志 (True/False)
LOG_FILE_ENABLED=True

# 日志文件路径
LOG_FILE_PATH=logs/app.log

# 日志文件最大大小（字节）
LOG_FILE_MAX_BYTES=10485760

# 日志文件备份数量
LOG_FILE_BACKUP_COUNT=5

# ==========================================
# 爬虫配置
# ==========================================

# 爬虫请求超时时间（秒）
CRAWLER_TIMEOUT=30

# 爬虫重试次数
CRAWLER_RETRY_COUNT=3

# 爬虫重试延迟时间（秒）
CRAWLER_RETRY_DELAY=5

# ==========================================
# API 配置
# ==========================================

# API 基础URL
API_BASE_URL=https://api.example.com

# API 密钥（如果目标API需要认证）
API_KEY=

# ==========================================
# 可选配置
# ==========================================

# 应用端口（默认5000）
# PORT=5000

# 应用主机地址（默认127.0.0.1）
# HOST=127.0.0.1

# 代理配置（如果需要）
# HTTP_PROXY=http://proxy.example.com:8080
# HTTPS_PROXY=https://proxy.example.com:8080